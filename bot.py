import telebot
import urllib.parse
import requests
import re
import random
from telebot import types
from collections import defaultdict, deque

TOKEN = '7691192017:AAFH2azoOy38TkucN3xiucy7sbVpxo8elcA'
bot = telebot.TeleBot(TOKEN)

search_count = 0
users = set()  # —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ
user_history = defaultdict(lambda: deque(maxlen=3))  # —ñ—Å—Ç–æ—Ä—ñ—è –¥–æ 3 –ø—ñ—Å–µ–Ω—å

random_songs = [
    "Shape of You Ed Sheeran",
    "Blinding Lights The Weeknd",
    "Someone Like You Adele",
    "Dance Monkey Tones and I",
    "Believer Imagine Dragons",
    "Montero Lil Nas X",
    "Closer The Chainsmokers",
    "Bad Guy Billie Eilish",
    "Sunflower Post Malone",
    "Se√±orita Shawn Mendes",
    "Perfect Ed Sheeran",
    "Havana Camila Cabello",
    "Girls Like You Maroon 5"
]

def get_video_info(search_query):
    search_url = f"https://www.youtube.com/results?search_query={urllib.parse.quote_plus(search_query)}"
    headers = {"User-Agent": "Mozilla/5.0"}
    response = requests.get(search_url, headers=headers)
    html = response.text

    video_ids = re.findall(r"watch\?v=(\S{11})", html)
    if not video_ids:
        return None

    video_id = video_ids[0]
    video_link = f"https://www.youtube.com/watch?v={video_id}"
    thumbnail_url = f"https://img.youtube.com/vi/{video_id}/hqdefault.jpg"

    title_match = re.search(r'"title":{"runs":\[{"text":"([^"]+)"\}', html)
    title = title_match.group(1) if title_match else "–ù–∞–∑–≤–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞"

    return title, video_link, thumbnail_url

def get_main_menu():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("üé≤ –í–∏–ø–∞–¥–∫–æ–≤–∞ –ø—ñ—Å–Ω—è")
    keyboard.add("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üïò –Ü—Å—Ç–æ—Ä—ñ—è")
    return keyboard

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤—ñ—Ç! –ù–∞–ø–∏—à–∏ —á–∞—Å—Ç–∏–Ω—É —Ç–µ–∫—Å—Ç—É –ø—ñ—Å–Ω—ñ –∞–±–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Å—è –º–µ–Ω—é –Ω–∏–∂—á–µ üé∂",
        reply_markup=get_main_menu()
    )

@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    global search_count
    user_id = message.from_user.id
    users.add(user_id)  # –î–æ–¥–∞—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

    text = message.text.strip()

    if text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
        bot.send_message(message.chat.id,
            f"üìà –í—Å—å–æ–≥–æ –ø–æ—à—É–∫—ñ–≤: {search_count}\nüë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –±–æ—Ç–∞: {len(users)}"
        )
        return

    if text == "üïò –Ü—Å—Ç–æ—Ä—ñ—è":
        history = list(user_history[user_id])
        if history:
            response = "\n".join([f"{i+1}. {song}" for i, song in enumerate(reversed(history))])
            bot.send_message(message.chat.id, f"üïò –û—Å—Ç–∞–Ω–Ω—ñ –ø—ñ—Å–Ω—ñ:\n{response}")
        else:
            bot.send_message(message.chat.id, "–£ —Ç–µ–±–µ —â–µ –Ω–µ–º–∞—î —ñ—Å—Ç–æ—Ä—ñ—ó üòï")
        return

    if text == "üé≤ –í–∏–ø–∞–¥–∫–æ–≤–∞ –ø—ñ—Å–Ω—è":
        query = random.choice(random_songs) + " lyrics"
    else:
        query = text + " lyrics"

    info = get_video_info(query)

    if info:
        title, link, thumbnail = info
        user_history[user_id].append(title)
        search_count += 1
        caption = f"üîç {title}\nüéß {link}"  # –ë–µ–∑ markdown
        bot.send_photo(message.chat.id, photo=thumbnail, caption=caption)
    else:
        bot.send_message(message.chat.id, "–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±—É–π —ñ–Ω—à—É —Ñ—Ä–∞–∑—É üîç")

bot.polling(none_stop=True)
